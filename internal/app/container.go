package app

// This file was generated by the goro tool.
// Editing this file might prove futile when you re-run the goro commands

import (
	"database/sql"

	"github.com/greyfox12/GoDilpom1/internal/usecase"

	accrualServ "github.com/greyfox12/GoDilpom1/internal/service/accrual"
	"github.com/greyfox12/GoDilpom1/internal/service/getbalance"
	"github.com/greyfox12/GoDilpom1/internal/service/getorders"
	"github.com/greyfox12/GoDilpom1/internal/service/getwithdrawals"
	"github.com/greyfox12/GoDilpom1/internal/service/migrate"
	"github.com/greyfox12/GoDilpom1/internal/service/postlogin"
	"github.com/greyfox12/GoDilpom1/internal/service/postorder"
	"github.com/greyfox12/GoDilpom1/internal/service/postregister"
	"github.com/greyfox12/GoDilpom1/internal/service/postwithdraw"
	"github.com/greyfox12/GoDilpom1/internal/service/testlogin"

	"github.com/greyfox12/GoDilpom1/internal/adapter/pgsqlxrepo/myrepo"
)

type Container struct {
	pgsqlx *sql.DB
	//	logger Logger
	//	cfg    config.Config

	deps map[string]interface{}
}

func NewContainer(pgSqlxConn *sql.DB /*, logger Logger, cfg config.Config*/) *Container {

	return &Container{
		pgsqlx: pgSqlxConn,
		//		logger: logger,
		//		cfg:    cfg,

		deps: make(map[string]interface{}),
	}
}

func (c *Container) GetUseCase() *usecase.UseCase {

	return usecase.NewUseCase(c.getGetOrders(), c.getGetBalance(), c.getGetWithdrawals(),
		c.getPostOrder(), c.getPostWithdraw(), c.getPostRegister(), c.getPostLogin(), c.getTestLogin(),
		c.getMigrateShema(), c.getAccural())
}

func (c *Container) getPgsqlx() *sql.DB {
	return c.pgsqlx
}

func (c *Container) getGetOrders() *getorders.Service {

	return getorders.NewService(c.getMyRepo())
}

func (c *Container) getGetBalance() *getbalance.Service {

	return getbalance.NewService(c.getMyRepo())
}

func (c *Container) getGetWithdrawals() *getwithdrawals.Service {

	return getwithdrawals.NewService(c.getMyRepo())
}

func (c *Container) getPostOrder() *postorder.Service {

	return postorder.NewService(c.getMyRepo())
}

func (c *Container) getPostWithdraw() *postwithdraw.Service {

	return postwithdraw.NewService(c.getMyRepo())
}

func (c *Container) getPostRegister() *postregister.Service {

	return postregister.NewService(c.getMyRepo())
}

func (c *Container) getPostLogin() *postlogin.Service {

	return postlogin.NewService(c.getMyRepo())
}

func (c *Container) getMyRepo() *myrepo.Repository {

	return myrepo.NewRepository(c.getPgsqlx())
}

func (c *Container) getTestLogin() *testlogin.Service {

	return testlogin.NewService(c.getMyRepo())
}

func (c *Container) getMigrateShema() *migrate.Service {

	return migrate.NewService(c.getMyRepo())
}

func (c *Container) getAccural() *accrualServ.Service {

	return accrualServ.NewService(c.getMyRepo())
}

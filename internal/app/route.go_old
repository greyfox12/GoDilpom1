package app

import (
	"net/http"

	"github.com/go-chi/chi/middleware"
	"github.com/go-chi/chi/v5"
	"github.com/greyfox12/GoDilpom1/pkg/logger"
)

func (c *App) Route() http.Handler {
	router := chi.NewRouter()
	router.Use(middleware.StripSlashes)

	// определяем хендлер
	/*	router.Group(func(r chi.Router) {
			r.Use(c.Autoriz)
			//получение списка загруженных пользователем номеров заказов, статусов их обработки и информации о начислениях
			r.Get("/api/user/orders", c.Loger.RequestLogger(c.getOrders))
			//получение текущего баланса счёта баллов лояльности пользователя
			r.Get("/api/user/balance", c.Loger.RequestLogger(c.getBalance))
			//запрос на списание баллов с накопительного счёта в счёт оплаты нового заказа
			r.Get("/api/user/withdrawals", c.Loger.RequestLogger(c.getWithdrawals))

			//загрузка пользователем номера заказа для расчёта
			r.Post("/api/user/orders", c.Loger.RequestLogger(c.postOrder))
			//запрос на списание баллов с накопительного счёта в счёт оплаты нового заказа
			r.Post("/api/user/balance/withdraw", c.Loger.RequestLogger(c.postWithdraw))

		})
	*/
	router.Group(func(r chi.Router) {
		r.Use(middleware.AccessLogMiddleware(logger.Logger))
		r.Post("/api/user/register", v1.PostRegister())
		//аутентификация пользователя
		/*		r.Post("/api/user/login", c.Loger.RequestLogger(c.postLogin()))
				// Ошибочный путь
				r.Post("/*", c.Loger.RequestLogger(c.errorPath))
				r.Get("/*", c.Loger.RequestLogger(c.errorPath))
		*/
	})

	//	hd := compress.GzipHandle(compress.GzipRead(router))

	//	return hd
	return router

}
